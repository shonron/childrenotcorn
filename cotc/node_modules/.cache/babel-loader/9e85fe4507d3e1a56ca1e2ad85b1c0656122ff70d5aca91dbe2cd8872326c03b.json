{"ast":null,"code":"export default class Badge {\n  /** This badge's ID */\n  id;\n  /** The user's level for this badge */\n  level;\n  /** UNIX Timestamp for when this badge was completed */\n  completedTimestamp;\n  /** The amount of XP gained towards this badge */\n  xp;\n  /** How many have received this badge\t */\n  scarcity;\n  /** If this badge belongs to a game, this is the app ID of that game */\n  appID;\n  /** If this badge belongs to a game, this is the community item ID for the badge */\n  communityItemID;\n  /** If this badge belongs to a game, this is the border color for the badge. (note: seems to always be 0) */\n  borderColor;\n  constructor(data) {\n    this.id = data.badgeid;\n    this.level = data.level;\n    this.completedTimestamp = data.completion_time;\n    this.xp = data.xp;\n    this.scarcity = data.scarcity;\n    // These only exist on game badges\n    this.appID = data.appid;\n    this.communityItemID = data.communityitemid;\n    this.borderColor = data.border_color;\n  }\n  /** Date when this badge was completed */\n  get completedAt() {\n    return new Date(this.completedTimestamp * 1000);\n  }\n}","map":{"version":3,"names":["Badge","id","level","completedTimestamp","xp","scarcity","appID","communityItemID","borderColor","constructor","data","badgeid","completion_time","appid","communityitemid","border_color","completedAt","Date"],"sources":["C:/Users/union/Documents/reactcotc/cotc/node_modules/steamapi/dist/src/structures/UserBadge.js"],"sourcesContent":["export default class Badge {\n    /** This badge's ID */\n    id;\n    /** The user's level for this badge */\n    level;\n    /** UNIX Timestamp for when this badge was completed */\n    completedTimestamp;\n    /** The amount of XP gained towards this badge */\n    xp;\n    /** How many have received this badge\t */\n    scarcity;\n    /** If this badge belongs to a game, this is the app ID of that game */\n    appID;\n    /** If this badge belongs to a game, this is the community item ID for the badge */\n    communityItemID;\n    /** If this badge belongs to a game, this is the border color for the badge. (note: seems to always be 0) */\n    borderColor;\n    constructor(data) {\n        this.id = data.badgeid;\n        this.level = data.level;\n        this.completedTimestamp = data.completion_time;\n        this.xp = data.xp;\n        this.scarcity = data.scarcity;\n        // These only exist on game badges\n        this.appID = data.appid;\n        this.communityItemID = data.communityitemid;\n        this.borderColor = data.border_color;\n    }\n    /** Date when this badge was completed */\n    get completedAt() {\n        return new Date(this.completedTimestamp * 1000);\n    }\n}\n"],"mappings":"AAAA,eAAe,MAAMA,KAAK,CAAC;EACvB;EACAC,EAAE;EACF;EACAC,KAAK;EACL;EACAC,kBAAkB;EAClB;EACAC,EAAE;EACF;EACAC,QAAQ;EACR;EACAC,KAAK;EACL;EACAC,eAAe;EACf;EACAC,WAAW;EACXC,WAAWA,CAACC,IAAI,EAAE;IACd,IAAI,CAACT,EAAE,GAAGS,IAAI,CAACC,OAAO;IACtB,IAAI,CAACT,KAAK,GAAGQ,IAAI,CAACR,KAAK;IACvB,IAAI,CAACC,kBAAkB,GAAGO,IAAI,CAACE,eAAe;IAC9C,IAAI,CAACR,EAAE,GAAGM,IAAI,CAACN,EAAE;IACjB,IAAI,CAACC,QAAQ,GAAGK,IAAI,CAACL,QAAQ;IAC7B;IACA,IAAI,CAACC,KAAK,GAAGI,IAAI,CAACG,KAAK;IACvB,IAAI,CAACN,eAAe,GAAGG,IAAI,CAACI,eAAe;IAC3C,IAAI,CAACN,WAAW,GAAGE,IAAI,CAACK,YAAY;EACxC;EACA;EACA,IAAIC,WAAWA,CAAA,EAAG;IACd,OAAO,IAAIC,IAAI,CAAC,IAAI,CAACd,kBAAkB,GAAG,IAAI,CAAC;EACnD;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}