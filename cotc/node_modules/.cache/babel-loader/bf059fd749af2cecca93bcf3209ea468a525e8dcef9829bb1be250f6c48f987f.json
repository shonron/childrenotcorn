{"ast":null,"code":"export default class UserPlaytime {\n  /** The game with various levels of information based on parameters passed to getUserOwnedGames()  */\n  game;\n  /** The total number of minutes the user has played this game */\n  minutes;\n  /** The number of minutes played in the last 2 weeks */\n  recentMinutes;\n  /** The number of minutes played on Windows (not accurate) */\n  windowsMinutes;\n  /** The number of minutes played on Mac (not accurate) */\n  macMinutes;\n  /** The number of minutes played on Linux (not accurate) */\n  linuxMinutes;\n  /** The number of minutes played while offline */\n  disconnectedMinutes;\n  /** UNIX Timestamp for when the user last played this game if the user has ever launched the game */\n  lastPlayedTimestamp;\n  constructor(data, game) {\n    this.game = game;\n    this.minutes = data.playtime_forever;\n    this.recentMinutes = data.playtime_2weeks || 0;\n    this.windowsMinutes = data.playtime_windows_forever;\n    this.macMinutes = data.playtime_mac_forever;\n    this.linuxMinutes = data.playtime_linux_forever;\n    this.disconnectedMinutes = data.playtime_disconnected || 0;\n    this.lastPlayedTimestamp = data.rtime_last_played;\n  }\n  /** Date when uaer last played this game */\n  get lastPlayedAt() {\n    return this.lastPlayedTimestamp === undefined ? undefined : new Date(this.lastPlayedTimestamp * 1000);\n  }\n}","map":{"version":3,"names":["UserPlaytime","game","minutes","recentMinutes","windowsMinutes","macMinutes","linuxMinutes","disconnectedMinutes","lastPlayedTimestamp","constructor","data","playtime_forever","playtime_2weeks","playtime_windows_forever","playtime_mac_forever","playtime_linux_forever","playtime_disconnected","rtime_last_played","lastPlayedAt","undefined","Date"],"sources":["C:/Users/union/Documents/reactcotc/cotc/node_modules/steamapi/dist/src/structures/UserPlaytime.js"],"sourcesContent":["export default class UserPlaytime {\n    /** The game with various levels of information based on parameters passed to getUserOwnedGames()  */\n    game;\n    /** The total number of minutes the user has played this game */\n    minutes;\n    /** The number of minutes played in the last 2 weeks */\n    recentMinutes;\n    /** The number of minutes played on Windows (not accurate) */\n    windowsMinutes;\n    /** The number of minutes played on Mac (not accurate) */\n    macMinutes;\n    /** The number of minutes played on Linux (not accurate) */\n    linuxMinutes;\n    /** The number of minutes played while offline */\n    disconnectedMinutes;\n    /** UNIX Timestamp for when the user last played this game if the user has ever launched the game */\n    lastPlayedTimestamp;\n    constructor(data, game) {\n        this.game = game;\n        this.minutes = data.playtime_forever;\n        this.recentMinutes = data.playtime_2weeks || 0;\n        this.windowsMinutes = data.playtime_windows_forever;\n        this.macMinutes = data.playtime_mac_forever;\n        this.linuxMinutes = data.playtime_linux_forever;\n        this.disconnectedMinutes = data.playtime_disconnected || 0;\n        this.lastPlayedTimestamp = data.rtime_last_played;\n    }\n    /** Date when uaer last played this game */\n    get lastPlayedAt() {\n        return this.lastPlayedTimestamp === undefined ? undefined : new Date(this.lastPlayedTimestamp * 1000);\n    }\n}\n"],"mappings":"AAAA,eAAe,MAAMA,YAAY,CAAC;EAC9B;EACAC,IAAI;EACJ;EACAC,OAAO;EACP;EACAC,aAAa;EACb;EACAC,cAAc;EACd;EACAC,UAAU;EACV;EACAC,YAAY;EACZ;EACAC,mBAAmB;EACnB;EACAC,mBAAmB;EACnBC,WAAWA,CAACC,IAAI,EAAET,IAAI,EAAE;IACpB,IAAI,CAACA,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,OAAO,GAAGQ,IAAI,CAACC,gBAAgB;IACpC,IAAI,CAACR,aAAa,GAAGO,IAAI,CAACE,eAAe,IAAI,CAAC;IAC9C,IAAI,CAACR,cAAc,GAAGM,IAAI,CAACG,wBAAwB;IACnD,IAAI,CAACR,UAAU,GAAGK,IAAI,CAACI,oBAAoB;IAC3C,IAAI,CAACR,YAAY,GAAGI,IAAI,CAACK,sBAAsB;IAC/C,IAAI,CAACR,mBAAmB,GAAGG,IAAI,CAACM,qBAAqB,IAAI,CAAC;IAC1D,IAAI,CAACR,mBAAmB,GAAGE,IAAI,CAACO,iBAAiB;EACrD;EACA;EACA,IAAIC,YAAYA,CAAA,EAAG;IACf,OAAO,IAAI,CAACV,mBAAmB,KAAKW,SAAS,GAAGA,SAAS,GAAG,IAAIC,IAAI,CAAC,IAAI,CAACZ,mBAAmB,GAAG,IAAI,CAAC;EACzG;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}