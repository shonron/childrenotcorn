{"ast":null,"code":"/** Game server as returned by getServerList */\nexport default class GameServer {\n  /** Server address of the form IPv4:PORT */\n  address;\n  /** The port this server is running on */\n  port;\n  /** The SteamID of this game server */\n  id;\n  /** Public name of the server */\n  name;\n  /** App ID this server is hosting */\n  appID;\n  /** The directory the game is from */\n  gameDir;\n  /** What version the server is running */\n  version;\n  /** Product string. Not sure what this means. Is often the same as gameDir */\n  product;\n  /** Server region */\n  region;\n  /** Number of players in the server */\n  players;\n  /** Max number of players that can join the server */\n  maxPlayers;\n  /** Number of bots in the server */\n  bots;\n  /** What map the game server is on */\n  map;\n  /** Is this server VAC secured */\n  secure;\n  /** Is the server running dedicated */\n  dedicated;\n  /** What OS the server is running. Typically 'l' or 'w' */\n  os;\n  /** Game specific sv_tags e.g. hidden,reserved,empty,secure */\n  tags;\n  constructor(data) {\n    this.address = data.addr;\n    this.port = data.gameport;\n    this.id = data.steamid;\n    this.name = data.name;\n    this.appID = data.appid;\n    this.gameDir = data.gamedir;\n    this.version = data.version;\n    this.product = data.product;\n    this.region = data.region;\n    this.players = data.players;\n    this.maxPlayers = data.max_players;\n    this.bots = data.bots;\n    this.map = data.map;\n    this.secure = data.secure;\n    this.dedicated = data.dedicated;\n    this.os = data.os;\n    this.tags = data.gametype.split(',');\n  }\n}","map":{"version":3,"names":["GameServer","address","port","id","name","appID","gameDir","version","product","region","players","maxPlayers","bots","map","secure","dedicated","os","tags","constructor","data","addr","gameport","steamid","appid","gamedir","max_players","gametype","split"],"sources":["C:/Users/union/Documents/reactcotc/cotc/node_modules/steamapi/dist/src/structures/GameServer.js"],"sourcesContent":["/** Game server as returned by getServerList */\nexport default class GameServer {\n    /** Server address of the form IPv4:PORT */\n    address;\n    /** The port this server is running on */\n    port;\n    /** The SteamID of this game server */\n    id;\n    /** Public name of the server */\n    name;\n    /** App ID this server is hosting */\n    appID;\n    /** The directory the game is from */\n    gameDir;\n    /** What version the server is running */\n    version;\n    /** Product string. Not sure what this means. Is often the same as gameDir */\n    product;\n    /** Server region */\n    region;\n    /** Number of players in the server */\n    players;\n    /** Max number of players that can join the server */\n    maxPlayers;\n    /** Number of bots in the server */\n    bots;\n    /** What map the game server is on */\n    map;\n    /** Is this server VAC secured */\n    secure;\n    /** Is the server running dedicated */\n    dedicated;\n    /** What OS the server is running. Typically 'l' or 'w' */\n    os;\n    /** Game specific sv_tags e.g. hidden,reserved,empty,secure */\n    tags;\n    constructor(data) {\n        this.address = data.addr;\n        this.port = data.gameport;\n        this.id = data.steamid;\n        this.name = data.name;\n        this.appID = data.appid;\n        this.gameDir = data.gamedir;\n        this.version = data.version;\n        this.product = data.product;\n        this.region = data.region;\n        this.players = data.players;\n        this.maxPlayers = data.max_players;\n        this.bots = data.bots;\n        this.map = data.map;\n        this.secure = data.secure;\n        this.dedicated = data.dedicated;\n        this.os = data.os;\n        this.tags = data.gametype.split(',');\n    }\n}\n"],"mappings":"AAAA;AACA,eAAe,MAAMA,UAAU,CAAC;EAC5B;EACAC,OAAO;EACP;EACAC,IAAI;EACJ;EACAC,EAAE;EACF;EACAC,IAAI;EACJ;EACAC,KAAK;EACL;EACAC,OAAO;EACP;EACAC,OAAO;EACP;EACAC,OAAO;EACP;EACAC,MAAM;EACN;EACAC,OAAO;EACP;EACAC,UAAU;EACV;EACAC,IAAI;EACJ;EACAC,GAAG;EACH;EACAC,MAAM;EACN;EACAC,SAAS;EACT;EACAC,EAAE;EACF;EACAC,IAAI;EACJC,WAAWA,CAACC,IAAI,EAAE;IACd,IAAI,CAAClB,OAAO,GAAGkB,IAAI,CAACC,IAAI;IACxB,IAAI,CAAClB,IAAI,GAAGiB,IAAI,CAACE,QAAQ;IACzB,IAAI,CAAClB,EAAE,GAAGgB,IAAI,CAACG,OAAO;IACtB,IAAI,CAAClB,IAAI,GAAGe,IAAI,CAACf,IAAI;IACrB,IAAI,CAACC,KAAK,GAAGc,IAAI,CAACI,KAAK;IACvB,IAAI,CAACjB,OAAO,GAAGa,IAAI,CAACK,OAAO;IAC3B,IAAI,CAACjB,OAAO,GAAGY,IAAI,CAACZ,OAAO;IAC3B,IAAI,CAACC,OAAO,GAAGW,IAAI,CAACX,OAAO;IAC3B,IAAI,CAACC,MAAM,GAAGU,IAAI,CAACV,MAAM;IACzB,IAAI,CAACC,OAAO,GAAGS,IAAI,CAACT,OAAO;IAC3B,IAAI,CAACC,UAAU,GAAGQ,IAAI,CAACM,WAAW;IAClC,IAAI,CAACb,IAAI,GAAGO,IAAI,CAACP,IAAI;IACrB,IAAI,CAACC,GAAG,GAAGM,IAAI,CAACN,GAAG;IACnB,IAAI,CAACC,MAAM,GAAGK,IAAI,CAACL,MAAM;IACzB,IAAI,CAACC,SAAS,GAAGI,IAAI,CAACJ,SAAS;IAC/B,IAAI,CAACC,EAAE,GAAGG,IAAI,CAACH,EAAE;IACjB,IAAI,CAACC,IAAI,GAAGE,IAAI,CAACO,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC;EACxC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}