{"ast":null,"code":"export default class UserAchievement {\n  /** API name for this achievement (e.g. ACH03, TF_GET_TURRETKILLS, Champion) */\n  name;\n  /** Whether the user has unlocked this achievement  */\n  unlocked;\n  /**\n   * Unix Timestamp for when the user unlocked this achievement.\n   * Is 0 if the user has not unlocked this achievement. Only defined\n   * when calling getUserAchievements()\n   */\n  unlockedTimestamp;\n  constructor(data) {\n    this.name = data.apiname;\n    this.unlocked = Boolean(data.achieved);\n    this.unlockedTimestamp = data.unlocktime;\n  }\n  /** Date when this achievement was unlocked */\n  get unlockedAt() {\n    return this.unlockedTimestamp ? new Date(this.unlockedTimestamp * 1000) : undefined;\n  }\n}","map":{"version":3,"names":["UserAchievement","name","unlocked","unlockedTimestamp","constructor","data","apiname","Boolean","achieved","unlocktime","unlockedAt","Date","undefined"],"sources":["C:/Users/union/Documents/reactcotc/cotc/node_modules/steamapi/dist/src/structures/UserAchievement.js"],"sourcesContent":["export default class UserAchievement {\n    /** API name for this achievement (e.g. ACH03, TF_GET_TURRETKILLS, Champion) */\n    name;\n    /** Whether the user has unlocked this achievement  */\n    unlocked;\n    /**\n     * Unix Timestamp for when the user unlocked this achievement.\n     * Is 0 if the user has not unlocked this achievement. Only defined\n     * when calling getUserAchievements()\n     */\n    unlockedTimestamp;\n    constructor(data) {\n        this.name = data.apiname;\n        this.unlocked = Boolean(data.achieved);\n        this.unlockedTimestamp = data.unlocktime;\n    }\n    /** Date when this achievement was unlocked */\n    get unlockedAt() {\n        return this.unlockedTimestamp ? new Date(this.unlockedTimestamp * 1000) : undefined;\n    }\n}\n"],"mappings":"AAAA,eAAe,MAAMA,eAAe,CAAC;EACjC;EACAC,IAAI;EACJ;EACAC,QAAQ;EACR;AACJ;AACA;AACA;AACA;EACIC,iBAAiB;EACjBC,WAAWA,CAACC,IAAI,EAAE;IACd,IAAI,CAACJ,IAAI,GAAGI,IAAI,CAACC,OAAO;IACxB,IAAI,CAACJ,QAAQ,GAAGK,OAAO,CAACF,IAAI,CAACG,QAAQ,CAAC;IACtC,IAAI,CAACL,iBAAiB,GAAGE,IAAI,CAACI,UAAU;EAC5C;EACA;EACA,IAAIC,UAAUA,CAAA,EAAG;IACb,OAAO,IAAI,CAACP,iBAAiB,GAAG,IAAIQ,IAAI,CAAC,IAAI,CAACR,iBAAiB,GAAG,IAAI,CAAC,GAAGS,SAAS;EACvF;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}